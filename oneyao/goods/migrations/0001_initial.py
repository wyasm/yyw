# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-11-09 13:42
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CatalogIdItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('catalogId', models.IntegerField()),
                ('fatherId', models.IntegerField()),
            ],
            options={
                'db_table': 'catalogId',
            },
        ),
        migrations.CreateModel(
            name='CatalogIdItem_1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('catalogId', models.IntegerField()),
                ('fatherId', models.IntegerField()),
            ],
            options={
                'db_table': 'catalogId_1',
            },
        ),
        migrations.CreateModel(
            name='CatalogIdItem_2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16)),
                ('catalogId', models.IntegerField()),
                ('fatherId', models.IntegerField()),
                ('icon_url', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'catalogId_2',
            },
        ),
        migrations.CreateModel(
            name='GoodsItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity', models.CharField(max_length=16)),
                ('activityDesc', models.CharField(max_length=128)),
                ('attrLabels', models.CharField(max_length=8)),
                ('boughtFlag', models.IntegerField()),
                ('brandId', models.IntegerField()),
                ('brandName', models.CharField(max_length=64)),
                ('buyType', models.IntegerField()),
                ('byName', models.CharField(max_length=8)),
                ('comments', models.IntegerField()),
                ('gift', models.CharField(max_length=512)),
                ('goldMedalScore', models.IntegerField()),
                ('goodsUserGrade', models.IntegerField()),
                ('goodsUserGradeRate', models.CharField(max_length=64)),
                ('groupId', models.IntegerField()),
                ('goodsid', models.IntegerField()),
                ('img', models.CharField(max_length=256)),
                ('isGoldMedal', models.IntegerField()),
                ('isHaiTao', models.IntegerField()),
                ('itemId', models.CharField(max_length=16)),
                ('marketPrice', models.IntegerField()),
                ('materialtype', models.CharField(max_length=16)),
                ('morePrice', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=128)),
                ('norms', models.CharField(max_length=128)),
                ('pcSalePrice', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('prescription', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('price', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('productNo', models.CharField(max_length=128)),
                ('promotionTypes', models.CharField(max_length=8)),
                ('saleType', models.IntegerField()),
                ('salesCount', models.IntegerField()),
                ('sellType', models.IntegerField()),
                ('showPic', models.IntegerField()),
                ('skuId', models.IntegerField()),
                ('specialStatus', models.IntegerField()),
                ('status', models.IntegerField()),
                ('store', models.CharField(max_length=16)),
                ('tcDefId', models.IntegerField()),
                ('tcFlag', models.IntegerField()),
                ('userGrade', models.IntegerField()),
                ('venderId', models.CharField(max_length=64)),
                ('venderName', models.CharField(max_length=128)),
                ('venderType', models.IntegerField()),
                ('fatherid', models.IntegerField()),
            ],
            options={
                'db_table': 'goods',
            },
        ),
        migrations.CreateModel(
            name='ProductItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productNo', models.CharField(max_length=128)),
                ('mainimg5', models.CharField(max_length=128)),
                ('showPic', models.IntegerField()),
                ('mainimg4', models.CharField(max_length=128)),
                ('mainimg3', models.CharField(max_length=128)),
                ('mainimg2', models.CharField(max_length=128)),
                ('approvalnum', models.CharField(max_length=64)),
                ('mainimg6', models.CharField(max_length=128)),
                ('venderId', models.CharField(max_length=32)),
                ('seriesIsMain', models.IntegerField()),
                ('interceptCount', models.IntegerField()),
                ('secondCatalogName', models.CharField(max_length=64)),
                ('mainimg1', models.CharField(max_length=128)),
                ('brandId', models.IntegerField()),
                ('brandName', models.CharField(max_length=64)),
                ('recommendPrice', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('saleType', models.IntegerField()),
                ('skuId', models.IntegerField()),
                ('status', models.IntegerField()),
                ('secondCatalogId', models.IntegerField()),
                ('firstCatalogName', models.CharField(max_length=64)),
                ('sellType', models.IntegerField()),
                ('originalPrice', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('catalogId', models.IntegerField()),
                ('gift', models.CharField(max_length=512)),
                ('weight', models.DecimalField(decimal_places=3, default=0, max_digits=10)),
                ('prescription', models.IntegerField()),
                ('seriesDisplayMode', models.IntegerField()),
                ('pcSalePrice', models.DecimalField(decimal_places=1, default=0, max_digits=10)),
                ('storeSchemeId', models.IntegerField()),
                ('sellPoint', models.CharField(max_length=128)),
                ('userGradecount', models.IntegerField()),
                ('saleArea', models.IntegerField()),
                ('h5GitLink', models.CharField(max_length=128)),
                ('limitCount', models.IntegerField()),
                ('giftLinkTxt', models.CharField(max_length=128)),
                ('userGrade', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('materialtype', models.CharField(max_length=64)),
                ('itemId', models.IntegerField()),
                ('hasCombo', models.IntegerField()),
                ('catalogName', models.CharField(max_length=32)),
                ('seriesAttrs', models.CharField(max_length=128)),
                ('areaItemId', models.IntegerField()),
                ('specialStatus', models.IntegerField()),
                ('drugLevel', models.IntegerField()),
                ('frightTemplateId', models.IntegerField()),
                ('firstCatalogId', models.IntegerField()),
                ('isHaiTao', models.IntegerField()),
                ('seriesId', models.IntegerField()),
                ('productName', models.CharField(max_length=128)),
                ('supplier', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'product',
            },
        ),
    ]
